const vulnerabilityDefinitions = {
    sql_injection: {
        id: 'sql_injection',
        category: 'A03',
        name: 'SQL Injection',
        databaseType: 'sqlite',
        examples: [
            'SQL Injection in login form',
            'SQL Injection in products search',
            'SQL Injection in user profile',
            'SQL Injection in admin panel'
        ],
        patterns: [
            /'\s*OR\s*['"]?[0-9]+['"]?\s*=\s*['"]?[0-9]+['"]?/i,
            /'\s*OR\s*['"]?1['"]?\s*=\s*['"]?1['"]?/i,
            /'\s*;\s*DROP\s+TABLE/i,
            /'\s*UNION\s+SELECT/i,
            /'\s*AND\s*1=1--/i
        ]
    },
    nosql_injection: {
        id: 'nosql_injection',
        category: 'A03',
        name: 'NoSQL Injection',
        databaseType: 'mongodb',
        examples: [
            'NoSQL Injection in login form',
            'NoSQL Operator Injection in search',
            'NoSQL Injection in user finder',
            'NoSQL Projection Injection'
        ],
        patterns: [
            /\{\s*\$ne:/i,
            /\{\s*\$gt:/i,
            /\{\s*\$where:/i,
            /\{\s*\$exists:/i,
            /\{\s*\$regex:/i
        ]
    },
    xss: {
        id: 'xss',
        category: 'A03',
        name: 'Cross-Site Scripting (XSS)',
        examples: [
            'Reflected XSS in search',
            'Stored XSS in comments',
            'DOM-based XSS',
            'XSS in HTML attributes'
        ],
        patterns: [
            /<script\b[^>]*>/i,
            /javascript:/i,
            /onerror\s*=/i,
            /onload\s*=/i
        ]
    },
    command_injection: {
        id: 'command_injection',
        category: 'A01',
        name: 'Command Injection',
        examples: [
            'OS Command Injection',
            'Shell Command Injection',
            'Command Injection in file operations',
            'Command Injection in system calls'
        ],
        patterns: [
            /;\s*([^;]+)/i,
            /\|\s*([^|]+)/i,
            /`.*`/,
            /\$\(.*\)/
        ]
    },
    path_traversal: {
        id: 'path_traversal',
        category: 'A05',
        name: 'Path Traversal',
        examples: [
            'Directory Traversal in file access',
            'Path Traversal in file upload',
            'Path Traversal in file download',
            'Path Traversal in image loading'
        ],
        patterns: [
            /\.\.\//i,
            /\.\.\\\//i,
            /%2F/i,
            /\.\.%5C/i
        ]
    }
};

export default vulnerabilityDefinitions;

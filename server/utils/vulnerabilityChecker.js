const fs = require('fs');
const path = require('path');

const vulnerabilityChecks = {
    // OWASP Top 10 Checks
    'A01:2021-Broken Access Control': [
        () => !process.env.JWT_SECRET || process.env.JWT_SECRET === 'your-vulnerable-jwt-secret-123',
        () => process.env.DISABLE_SECURITY_HEADERS === 'true'
    ],
    'A02:2021-Cryptographic Failures': [
        () => !process.env.ENABLE_HTTPS || process.env.ENABLE_HTTPS === 'false'
    ],
    'A03:2021-Injection': [
        () => process.env.DISABLE_INPUT_VALIDATION === 'true',
        () => !process.env.ENABLE_SQL_SANITIZATION || process.env.ENABLE_SQL_SANITIZATION === 'false'
    ],
    'A05:2021-Security Misconfiguration': [
        () => process.env.ALLOW_CORS === '*',
        () => process.env.NODE_ENV !== 'production'
    ],
    'A07:2021-Identification and Authentication Failures': [
        () => !process.env.PASSWORD_POLICY || process.env.PASSWORD_POLICY === 'weak',
        () => process.env.JWT_EXPIRES_IN === '24h'
    ]
};

function checkVulnerabilities() {
    console.log('üîç Checking for required vulnerabilities...');
    let vulnerabilitiesFound = 0;
    let totalChecks = 0;

    for (const [category, checks] of Object.entries(vulnerabilityChecks)) {
        let categoryVulnerable = false;
        
        checks.forEach(check => {
            totalChecks++;
            if (check()) {
                vulnerabilitiesFound++;
                categoryVulnerable = true;
            }
        });

        console.log(`${categoryVulnerable ? '‚úÖ' : '‚ùå'} ${category}`);
    }

    const percentage = (vulnerabilitiesFound / totalChecks) * 100;
    console.log(`\nVulnerability Score: ${percentage.toFixed(1)}%`);

    if (percentage < 70) {
        console.warn('\n‚ö†Ô∏è WARNING: Application may not be vulnerable enough for training purposes!');
        console.warn('Please review security settings and environment variables.');
    } else {
        console.log('\n‚úÖ Application is properly vulnerable for training purposes!');
    }
}

module.exports = { checkVulnerabilities };
